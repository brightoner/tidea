<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd ">

	<mvc:annotation-driven />
	<task:annotation-driven />

	<!-- (@Repository, @Service, @Controller 와 같은 어노테이션(Annotation) 을 통해 Bean 객체를 생성) 태그를 설정파일에 추가하면 해당 어노테이션이 적용된 클래스를 빈으로 등록하게 된다.
		스캔 대상 클래스 범위 지정은
		<context:include-filter> 태그와
		<context:exclude-filter> 태그를 사용하면 자동 스캔 대상에 포함시킬 클래스와 포함시키지 않을 클래스를 구체적으로 명시할 수 있다.
		<context:include-filter> : 포함
		<context:exclude-filter> : 포함하지 않음. -->
	<context:component-scan base-package="tidea, egovframework" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service" />
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Repository" />
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Component" />
	</context:component-scan>
	
	
	
	<!-- 예외처리 -->
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="defaultErrorView" value="error/egovError.jsp" />
		<property name="exceptionMappings">
			<props>
				<prop key="org.springframework.dao.DataAccessException">error/dataAccessFailure.jsp</prop>
				<prop key="org.springframework.transaction.TransactionException">error/transactionFailure.jsp</prop>
				<prop key="egovframework.rte.fdl.cmmn.exception.EgovBizException">error/egovError.jsp</prop>
				<prop key="org.springframework.security.AccessDeniedException">error/egovError.jsp</prop>
			</props>
		</property>
	</bean>
	<bean id="downloadViewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<property name="order">
			<value>0</value>
		</property>
 	</bean>
 	<bean id="download" class="tidea.utils.FileUtil.DownloadView"/>

 	
	<!-- tile 설정 -->
	<bean id="tilesviewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView" />
<!-- 		<property name="contentType" value="text/html;charset=UTF-8" /> -->
		<property name="order" value="0" />
	</bean>
	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<property name="definitions">
			<list>
<!-- 				<value>/WEB-INF/config/egovframework/tiles/tiles-def.xml</value> -->
<!-- 				<value>/WEB-INF/config/egovframework/tiles/test_tiles-def.xml</value> -->
				<value>/WEB-INF/config/egovframework/tiles/*.xml</value>
			</list>
		</property>
	</bean>
	
	<!-- jsonView -->
	<bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>
	<bean id="bnViewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver" p:order="0"/>
	
	<!-- 사용자에게 보여줄 view를 생성할때 prefix 와 suffix 로 지정해 줄수 있다. -->
	<bean class="org.springframework.web.servlet.view.UrlBasedViewResolver" 
	p:order="1"
	p:viewClass="org.springframework.web.servlet.view.JstlView"
	p:prefix="/WEB-INF/views/" 
	p:suffix=".jsp" />		
	<!-- For Pagination Tag -->
	<bean id="imageRenderer" class="egovframework.cmmn.web.EgovImgPaginationRenderer" />

	<bean id="paginationManager" class="egovframework.rte.ptl.mvc.tags.ui.pagination.DefaultPaginationManager">
		<property name="rendererType">
			<map>
				<entry key="image" value-ref="imageRenderer" />
			</map>
		</property>
	</bean>
	<!-- /For Pagination Tag -->
	
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**/*"/>
<!-- 			<mvc:exclude-mapping path="/ad50"/>       -->
<!-- 			<mvc:exclude-mapping path="/acomssuper"/>       -->
	      
			<bean class="tidea.review.common.Interceptor"> 
				<property name="permittedURL">
					<set>
						<value>/login/login.do</value>
						<value>/login/goLogin.do</value>
						<value>/branch/branch.do</value>
						<value>/branch/branch.do</value>
						<value>/regist/regist.do</value>
						<value>/regist/insertUsrMng.do</value>
						<value>/regist/duplIdCheck.do</value>
						<value>/regist/idPwFind.do</value>
						<value>/regist/idFind.do</value>
						<value>/regist/passFind.do</value>
						<value>/regist/updatePw2.do</value>
					</set>
				</property>
				<property name="ajaxCompoURL">
					<set>
						<value>/commonSh/getYearComboboxList.do</value>
						<value>/commonSh/getCmmnCdList.do</value>
						<value>/commonSh/cnfirmAtCheck.do</value>
					</set>
				</property>
			</bean>
	       <!-- HandlerInterceptor 인터페이스를 구현한 클래스 -->
	    </mvc:interceptor>
	</mvc:interceptors>


</beans>
