<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tidea.review.login.dao.LoginDao">

	<!-- 로그인 아이디가 존재하는 체크 -->
	<select id="selectLoginUserIdCheck" parameterType="string" resultType="int">
		/* LoginMap.selectLoginUserIdCheck */
		SELECT COUNT(*)
		FROM USER_TB
		WHERE USER_ID = #{USER_ID}
		
	</select>

	<!-- 로그인 패스워드 체크  -->
	<select id="selectLoginPwCheck" parameterType="java.util.HashMap" resultType="string">
		/* LoginMap.selectLoginPwCheck */
		<![CDATA[
		SELECT IF(USER_PWD = #{USER_PWD},'Y','N') AS PW_CHECK
		FROM USER_TB
		WHERE USER_ID = #{USER_ID}
		]]>
	</select>
	
	
	<select id="selectEmployeeAuth" parameterType="string" resultType="java.util.HashMap">
		/*LoginMap.selectEmployeeAuth*/
		<![CDATA[
		SELECT AUTH_CD
			 , USER_ID
			 , USER_PWD
			 , USER_NM
		FROM USER_TB
		WHERE USER_ID = #{USER_ID}
 		]]> 
	</select>
	
	
<!-- ************ 20220223 로그인횟수제한 ************************-->
		
	<!-- 로그인가능여부 Y, 로그인 시도시간 10분 이상 - 로그인 성공 : 실패카트 초기화, 로그인여부 Y, 로그인날짜 최신화 --> 
	<update id="resetLoginFailCnt" parameterType="authVo">
	/*LoginMap.resetLoginFailCnt*/
		UPDATE USER_TB
		SET LOGIN_FAIL_COUNT = 0
		   ,LAST_LOGIN_DT = NOW() 
		   ,LOGIN_AT= 'Y' 
		WHERE USER_ID = #{USER_ID}
	</update>	
	
	
	<!-- 로그인실패 (비밀번호실패시) - 실패사운트 +1, 로그인실패시간 최신화, 로그인구분자 (0 ~ 4 : Y, 5 : N, 6 ~ : Y) 수정 -->
	<update id="updateLoginFailCnt" parameterType="authVo">
		/*LoginMap.updateLoginFailCnt*/
		<![CDATA[
		UPDATE USER_TB
		SET LOGIN_FAIL_COUNT = IF(LOGIN_FAIL_COUNT < 5 ,LOGIN_FAIL_COUNT + 1, LOGIN_FAIL_COUNT)
			,LOGIN_TRY_DT = NOW()
			,LOGIN_AT = CASE
						WHEN LOGIN_FAIL_COUNT < 5 THEN 'Y'
						WHEN LOGIN_FAIL_COUNT = 5 THEN 'N'
						ELSE 'Y'
					END 				
		WHERE USER_ID = #{USER_ID}
		]]>
	</update>
	
	
	<!-- 로그인 실패 5번이상 && 10분미만일결우를 체크 하기위한  -->
	<select id="selectFailInfo" parameterType="string" resultType="java.util.HashMap">
	/*LoginMap.selectFailInfo*/
		SELECT LOGIN_FAIL_COUNT
			 , TIMESTAMPDIFF(MINUTE, LOGIN_TRY_DT, NOW()) AS LOGIN_TRY_DT 
			 , LOGIN_AT
		FROM user_tb 
		WHERE USER_ID = #{USER_ID}
	</select>
	
<!-- *************************************************************** -->
	
	
	
	<!-- 우선심사등록시 연간회원, 일반회원구분 - 결제금액을 구분하기 위해 -->
	<select id="chkAnnualUser" parameterType="authVo" resultType="string">
	/* ApplyMap.chkAnnualUser */
		SELECT ANNUAL_USER
		FROM USER_TB
		WHERE USER_ID = #{USER_ID}
	</select>
	
	
	<!-- 관리자 리턴 URL용 쿼리 -->
	<select id="selectMngUrl" resultType="java.util.HashMap">
	/* ApplyMap.selectMngUrl */
		 SELECT MENU_URL,MENU_ID 
		 FROM (
				SELECT MENU_ID
					 , MENU_URL
					 , MENU_LEVL
					 , MENU_PRTS_ID
					 , MENU_ORD
					 , MENU_USE_AUTH
				FROM MENU_MANAGE_TB 
				ORDER BY MENU_ORD ASC
					)A WHERE A.MENU_PRTS_ID = 'TOP_9'   AND A.MENU_URL = '/auth/menuMng.do' 
	</select>
	
	
	<select id="selectManagerInfo" parameterType="string" resultType="java.util.HashMap">
	/*LoginMap.selectManagerInfo*/
		SELECT USER_ID
		     , USER_NM
		     , USER_PWD
		     , AUTH_CD
		FROM USER_TB
		WHERE USER_ID=#{USER_ID}
	</select>


	<!-- 로그인시 접속 로그기록 -->
	<insert id="insertLoginLog" parameterType="loginVo">
	/* LoginMap.insertLoginLog */
		INSERT INTO rv_log_tb
		( USER_ID
		 ,LOGIN_DT
		 ,USER_IP
		)VALUES(
		  #{USER_ID}
		 ,NOW()
		 ,#{USER_IP}
		)
	</insert>



</mapper>